from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, ContextTypes, MessageHandler, CallbackQueryHandler, filters
from keyboards.emotion import emotion_keyboard
from services.backend_client import send_photo_for_animation
import os

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Ñ–æ—Ç–æ –ø–æ user_id
user_photos = {}

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    photo = update.message.photo[-1]  # —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –ø–æ –∫–∞—á–µ—Å—Ç–≤—É
    file = await photo.get_file()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–∞–º—è—Ç—å –ø—É—Ç—å (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å storage/)
    file_path = f"storage/{user_id}_photo.jpg"
    await file.download_to_drive(file_path)
    user_photos[user_id] = file_path

    await update.message.reply_text(
        "üì∏ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ! –í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –æ–∂–∏–≤–ª–µ–Ω–∏—è:",
        reply_markup=emotion_keyboard()
    )

async def handle_emotion_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id
    emotion = query.data.replace("emotion:", "")
    photo_path = user_photos.get(user_id)

    if not photo_path or not os.path.exists(photo_path):
        await query.edit_message_text("‚ùå –§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–∏—à–ª–∏ –µ–≥–æ –∑–∞–Ω–æ–≤–æ.")
        return

    await query.edit_message_text("üé¨ –û–∂–∏–≤–ª—è—é —Ñ–æ—Ç–æ, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ...")

    try:
        video_path = await send_photo_for_animation(photo_path, emotion)
        await context.bot.send_video(chat_id=user_id, video=open(video_path, "rb"))
    except Exception as e:
        await context.bot.send_message(chat_id=user_id, text="‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–∂–∏–≤–ª–µ–Ω–∏–∏ —Ñ–æ—Ç–æ.")
        raise e

def register_photo_handlers(app: Application):
    app.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    app.add_handler(CallbackQueryHandler(handle_emotion_choice, pattern="^emotion:"))
